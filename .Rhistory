library(devtools)
devtools::load_all(".")
devtools::load_all(".")
run_UnmetNeeds_app()
devtools::load_all(".")
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
devtools::load_all(".")
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
UnmetNeeds::CCG_IMD_population_2019
colnames(UnmetNeeds::CCG_IMD_population_2019)
colnames(UnmetNeeds::CCG_IMD_population_2019)
tmp_df = UnmetNeeds::CCG_IMD_population_2019
print(colnames(tmp_df)[colnames(tmp_df)!= "Region"])
tmp_df[, c(colnames(tmp_df)[colnames(tmp_df) != "Region"], "Region")]
devtools::load_all(".")
rm(list = ls())
run_UnmetNeeds_app()
run_UnmetNeeds_app()
class(UnmetNeeds::CCG_IMD_population_2019)
tst = UnmetNeeds::CCG_IMD_population_2019
tst = as.data.table(tst)
tst = data.table::as.data.table(tst)
quad = colnames(tst)
quad
tst[,
list(..quad)]
tst[,
quad,]
tst[,
quad, with = F]
rm(list = ls())
run_UnmetNeeds_app()
rm(list = ls())
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
devtools::load_all(".")
run_UnmetNeeds_app()
run_UnmetNeeds_app()
2e6 / 4e3
2e6 / 4e3
run_UnmetNeeds_app()
run_UnmetNeeds_app()
35635 / 8
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
source("~/unmet-needs/data-raw/input_data_mQALE.R")
devtools::load_all(".")
mean(input_data_mQALE$`Mortality elasticity`) == input_data_mQALE$`Overall mortality elasticity`
mean(input_data_mQALE$`Mortality elasticity`)
input_data_mQALE$`Overall mortality elasticity`
mean(input_data_mQALE$`Baseline health`)
mean(input_data_mQALE$`Mortality rate`)
source("~/unmet-needs/data-raw/input_data_mQALE.R")
rm(list = ls())
tst = data.frame(
names(UnmetNeeds::input_data_mQALE$`Baseline health`),
UnmetNeeds::input_data_mQALE$`Baseline health` |>
unname(),
UnmetNeeds::input_data_mQALE$`Mortality rate` |>
unname(),
c(UnmetNeeds::input_data_mQALE$`Mortality elasticity` |>
unname(), UnmetNeeds::input_data_mQALE$`Overall mortality elasticity`)
) |>
`colnames<-`(
c("Deprivation Quantile", "Baseline Health", "Mortality Rate",
"Mortality Elasticity")
)
source("~/unmet-needs/data-raw/input_data_mQALE.R")
rm(list = ls())
devtools::load_all(".")
tst = data.frame(
names(UnmetNeeds::input_data_mQALE$`Baseline health`),
UnmetNeeds::input_data_mQALE$`Baseline health` |>
unname(),
UnmetNeeds::input_data_mQALE$`Mortality rate` |>
unname(),
c(UnmetNeeds::input_data_mQALE$`Mortality elasticity` |>
unname(), UnmetNeeds::input_data_mQALE$`Overall mortality elasticity`)
) |>
`colnames<-`(
c("Deprivation Quantile", "Baseline Health", "Mortality Rate",
"Mortality Elasticity")
)
tst
tst["Baseline Health Burden"] <-
round(
x = tst[input$target_maximum_QALE |> unname(),] -
tst["Baseline Health"],
digits = 2
)
tst["Baseline Health Burden"] <-
round(
x = tst[input_data_mQALE$`Target maximum QALE`[2] |> unname(),] -
tst["Baseline Health"],
digits = 2
)
tst["Baseline Health Burden"] <-
round(
x = input_data_mQALE$`Target maximum QALE`[2] |> unname() -
tst["Baseline Health"],
digits = 2
)
tst
input_data_mQALE$`Target maximum QALE`[2]
run_UnmetNeeds_app()
subset(tst, subset = 1:4)
tst[1:4, ]
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
tst
tst[6, 2:5]
tst[6, 2:5] <- colMeans(tst[1:5, 2:5])
tst
colMeans(tst[1:5, 2:5])
colMeans(tst[1:5, 2:5])["Mortality Rate"]
colMeans(tst[1:5, 2:5])["Mortality Rate"] <- 1000
tst2 = colMeans(tst[1:5, 2:5])
tst2
tst["Mortality Rate"] <- 1000
View(tst)
tst2["Mortality Rate"] <- 1000
tst2
source("~/unmet-needs/data-raw/input_data_mQALE.R")
rm(list = ls())
devtools::load_all(".")
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
tst = UnmetNeeds::CCG_IMD_population_2019
tst[, 1:11]
tst[, 1:12]
is.null(tst[["CCG19CD"]])
is.null(tst[["CCG19CD0"]])
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
devtools::load_all(".")
rm(list = ls())
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
rm(list = ls())
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
tst = UnmetNeeds::CCG_IMD_population_2019
tst[1,]
tst[[1,]]
tst[[1]]
tst[1,]
tst[1,] |> as.vector()
tst[1,] |> unlist()
tst[1,] |> unlist() |> class()
tst[1,] |> unlist() |> t
tt = tst[1,] |> unlist()
tt
tst[1,] |> unlist()
tst[1, 5:8] |> unlist()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
rm(list = ls())
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
devtools::load_all(".")
run_UnmetNeeds_app()
rm(list = ls())
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
input_data_mQALE$`Mortality rate`
rm(list = ls())
absolute_QALYs <- calculate_absolute_QALYs(
target_maximum_health_ = input_data_mQALE$`Target maximum QALE`,
baseline_health_ = input_data_mQALE$`Baseline health`[1:5],
mortality_elasticity_ = input_data_mQALE$`Mortality elasticity`,
equal_mortality_elasticity_ = input_data_mQALE$`Equal mortality elasticity`,
option_ = "estimated_mortality_elasticity",
imd_population_ = CCG_IMD_population_2019,
provider_ = "CCG"
)
devtools::load_all(".")
absolute_QALYs <- calculate_absolute_QALYs(
target_maximum_health_ = input_data_mQALE$`Target maximum QALE`,
baseline_health_ = input_data_mQALE$`Baseline health`[1:5],
mortality_elasticity_ = input_data_mQALE$`Mortality elasticity`,
equal_mortality_elasticity_ = input_data_mQALE$`Equal mortality elasticity`,
option_ = "estimated_mortality_elasticity",
imd_population_ = CCG_IMD_population_2019,
provider_ = "CCG"
)
absolute_QALYs_equ_elas <- calculate_absolute_QALYs(
target_maximum_health_ = input_data_mQALE$`Target maximum QALE`,
baseline_health_ = input_data_mQALE$`Baseline health`[1:5],
mortality_elasticity_ = input_data_mQALE$`Mortality elasticity`,
equal_mortality_elasticity_ = input_data_mQALE$`Equal mortality elasticity`,
option_ = "equal_mortality_elasticity",
imd_population_ = CCG_IMD_population_2019,
provider_ = "CCG"
)
absolute_QALYs
average_QALYs <- calculate_average_QALYs(
absolute_QALYs_ = calculate_absolute_QALYs(
target_maximum_health_ = input_data_mQALE$`Target maximum QALE`,
baseline_health_ = input_data_mQALE$`Baseline health`[1:5],
mortality_elasticity_ = input_data_mQALE$`Mortality elasticity`,
equal_mortality_elasticity_ = input_data_mQALE$`Equal mortality elasticity`,
option_ = "estimated_mortality_elasticity",
imd_population_ = CCG_IMD_population_2019,
provider_ = "CCG"
)$data[[1]],
imd_population_ = CCG_IMD_population_2019
)
average_QALYs_equ_elas <- calculate_average_QALYs(
absolute_QALYs_ = calculate_absolute_QALYs(
target_maximum_health_ = input_data_mQALE$`Target maximum QALE`,
baseline_health_ = input_data_mQALE$`Baseline health`[1:5],
mortality_elasticity_ = input_data_mQALE$`Mortality elasticity`,
equal_mortality_elasticity_ = input_data_mQALE$`Equal mortality elasticity`,
option_ = "equal_mortality_elasticity",
imd_population_ = CCG_IMD_population_2019,
provider_ = "CCG"
)$data[[1]],
imd_population_ = CCG_IMD_population_2019
)
total_lives_saved <- calculate_total_deaths(
mortality_rates_ = input_data_mQALE$`Mortality rate`[1:5],
mortality_elasticity_ = input_data_mQALE$`Mortality elasticity`,
equal_mortality_elasticity_ = input_data_mQALE$`Equal mortality elasticity`,
option_ = "estimated_mortality_elasticity",
imd_population_ = CCG_IMD_population_2019,
provider_ = "CCG"
)
total_lives_saved_equ_elas <- calculate_total_deaths(
mortality_rates_ = input_data_mQALE$`Mortality rate`[1:5],
mortality_elasticity_ = input_data_mQALE$`Mortality elasticity`,
equal_mortality_elasticity_ = input_data_mQALE$`Equal mortality elasticity`,
option_ = "equal_mortality_elasticity",
imd_population_ = CCG_IMD_population_2019,
provider_ = "CCG"
)
total_lives_saved
run_UnmetNeeds_app()
run_UnmetNeeds_app()
rm(list = ls())
run_UnmetNeeds_app()
devtools::load_all(".")
run_UnmetNeeds_app()
calculate_average_QALYs(
absolute_QALYs_ = calculate_absolute_QALYs(
target_maximum_health_ = input_data_mQALE$`Target maximum QALE`,
baseline_health_ = input_data_mQALE$`Baseline health`[1:5],
mortality_elasticity_ = input_data_mQALE$`Mortality elasticity`,
equal_mortality_elasticity_ = input_data_mQALE$`Equal mortality elasticity`,
option_ = "equal_mortality_elasticity",
imd_population_ = CCG_IMD_population_2019,
provider_ = "CCG"
)$data[[1]],
imd_population_ = CCG_IMD_population_2019
)
calculate_average_QALYs(
absolute_QALYs_ = calculate_absolute_QALYs(
target_maximum_health_ = input_data_mQALE$`Target maximum QALE`,
baseline_health_ = input_data_mQALE$`Baseline health`[1:5],
mortality_elasticity_ = input_data_mQALE$`Mortality elasticity`,
equal_mortality_elasticity_ = input_data_mQALE$`Equal mortality elasticity`,
option_ = "estimated_mortality_elasticity",
imd_population_ = CCG_IMD_population_2019,
provider_ = "CCG"
)$data[[1]],
imd_population_ = CCG_IMD_population_2019
)
calculate_average_deaths(
total_lives_saved_ = calculate_total_deaths(
mortality_rates_ = input_data_mQALE$`Mortality rate`[1:5],
mortality_elasticity_ = input_data_mQALE$`Mortality elasticity`,
equal_mortality_elasticity_ = input_data_mQALE$`Equal mortality elasticity`,
option_ = "equal_mortality_elasticity",
imd_population_ = CCG_IMD_population_2019,
provider_ = "CCG"
)$data,
imd_population_ = CCG_IMD_population_2019
)
calculate_average_deaths(
total_lives_saved_ = calculate_total_deaths(
mortality_rates_ = input_data_mQALE$`Mortality rate`[1:5],
mortality_elasticity_ = input_data_mQALE$`Mortality elasticity`,
equal_mortality_elasticity_ = input_data_mQALE$`Equal mortality elasticity`,
option_ = "estimated_mortality_elasticity",
imd_population_ = CCG_IMD_population_2019,
provider_ = "CCG"
)$data,
imd_population_ = CCG_IMD_population_2019
)
devtools::load_all(".")
run_UnmetNeeds_app()
devtools::load_all(".")
devtools::load_all(".")
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
rm(list = ls())
devtools::install()
UnmetNeeds::run_UnmetNeeds_app()
devtools::uninstall()
devtools::load_all(".")
library(readr)
Unmet_needs_object2 <- read_csv("~/Unmet needs object2.csv")
View(Unmet_needs_object2)
cov(Unmet_needs_object2$`Fractional rank`, Unmet_needs_object2$HALE)
cov(Unmet_needs_object2$`Fractional rank`, Unmet_needs_object2$HALE) / var(Unmet_needs_object2$HALE)
cov(Unmet_needs_object2$`Fractional rank`, Unmet_needs_object2$HALE)
var(Unmet_needs_object2$`Fractional rank`)
cov(Unmet_needs_object2$`Fractional rank`, Unmet_needs_object2$HALE) / var(Unmet_needs_object2$`Fractional rank`)
lm(formula = HALE ~ `Fractional rank`, data = Unmet_needs_object2)
rm(list = ls())
library(readr)
Unmet_needs_object2 <- read_csv("~/Unmet needs object2.csv")
View(Unmet_needs_object2)
ind_var = Unmet_needs_object2$HALE
ind_var = Unmet_needs_object2$`Fractional rank`
dep_var = Unmet_needs_object2$HALE
lm(dep_var ~ ind_var)
devtools::load_all(".")
run_UnmetNeeds_app()
colSums(Unmet_needs_object2)
tst = colSums(Unmet_needs_object2)
tst
class(tst)
lm(dep_var ~ ind_var)
tst = lm(dep_var ~ ind_var)
tst$coefficients
tst$coefficients[2]
lm(dep_var ~ ind_var)$coefficients[2]
devtools::load_all(".")
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
rm(list = ls())
run_UnmetNeeds_app()
devtools::load_all(".")
run_UnmetNeeds_app()
run_UnmetNeeds_app()
tst = UnmetNeeds::CCG_IMD_population_2019,
tst = UnmetNeeds::CCG_IMD_population_2019
quantile_names <- tst |>
grep(
x = _,
pattern = "Q",
ignore.case = FALSE,
value = TRUE
)
tst2 = tst
tst[, list(quantile_names := quantile_names / 80)]
help(":=")
tst[, (quantile_names) := quantile_names / 80]
is.data.table(tst)
data.table::is.data.table(tst)
tst = as.data.table(tst)
tst = data.table::as.data.table(tst)
tst[, (quantile_names) := quantile_names / 80]
quantile_names
quantile_names <- tst |>
colnames() |>
grep(
x = _,
pattern = "Q",
ignore.case = FALSE,
value = TRUE
)
tst[, (quantile_names) := quantile_names / 80]
quantile_names
tst3 = tst2
tst3[, quantile_names] = tst3[, quantile_names] / 80
View(tst3)
View(tst2)
View(tst3)
View(tst2)
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
run_UnmetNeeds_app()
