% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_map_data.R
\name{get_map_data}
\alias{get_map_data}
\title{Get Map API Query for Open Geography Portal}
\usage{
get_map_data(
  healthcare_entity_ = "ics",
  map_year_ = 2023,
  outFields_ = "*",
  simplify_shape_ = TRUE
)
}
\arguments{
\item{healthcare_entity_}{A string scalar, either "ccg" or "ics" representing
the healthcare organisation for which the map data is to be queried.}

\item{map_year_}{A numeric scalar, specifying the year for which map data is
to be queried. Setting this parameter to any value but \code{NULL} will lead the
function to ignore the parameter \code{healthcare_entity_}. Should users request
map data before or after the currently provided data, then the function will
query the earliest or latest available data, respectively.}

\item{outFields_}{A string vector specifying the names of the columns the user
wants the API to return. For example "ICB22CD", "ICB22NM", "LONG", "LAT",
"Shape__Area", "Shape__Length". If all contents were required, then users
should set this parameter to \code{"*"}.}

\item{simplify_shape_}{A logical scalar, default is TRUE, indicating whether
to reduce the size of the shape file using \link[rmapshaper]{ms_simplify}.}
}
\value{
A shapefile.
}
\description{
Performs an API query for data from the Open Geography Portal
(OGP).
}
\details{
Connects to the Open Geography Portal (OGP), an application
programming interface (API) operated by or behalf of the Office of National
Statistics (ONA), and performs an API query to get a boundary data shape file
for healthcare organisations, Integrated care systems/boards (ICSs)/(ICBs)
or NHS Clinical Commissioning Groups (CCGs), (with codes and names). If the
API query is not successful, this function will stop and return an error.
The API call was developed by interrogating the API explorer provided by
ONS's OGP.
https://geoportal.statistics.gov.uk/datasets/integrated-care-boards-july-2022-en-bfc-3/api
}
\examples{
\dontrun{
data_2018 <- get_map_data(map_year_ = 2018)
data_2023 <- get_map_data(healthcare_entity_ = "ics")
}

}
